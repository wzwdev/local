#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;
#pid        logs/nginx.pid;
events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    client_max_body_size 50m;
    upload_progress proxied 1m;

    #gzip  on;

    server {
        listen       80;
        #server_name  localhost;
        #charset utf-8;
        #access_log  logs/host.access.log  main;
	      
        location / {
            root   html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }	

	location /upload {      
		# 转到后台处理URL,表示Nginx接收完上传的文件后，然后交给后端处理的地址
		upload_pass /upload_finish.jsp?$args;
		# 开启断点续传
		upload_resumable on;
                upload_state_store /alidata/oss/tmp;     
		# 临时保存路径, 可以使用散列
		# 上传模块接收到的文件临时存放的路径，1 表示方式，该方式是需要先在/alidata/oss/tmp下创建以0到9为目录名称的目录，上传时候会进行一个散列处理。
		upload_store /alidata/oss/tmp;
		# 上传文件的权限，rw表示读写 r只读
		upload_store_access user:rw group:rw all:rw;
		# 这里写入http报头，pass到后台页面后能获取这里set的报头字段
		upload_set_form_field "${upload_field_name}_name" $upload_file_name;
		upload_set_form_field "${upload_field_name}_content_type" $upload_content_type;
		upload_set_form_field "${upload_field_name}_path" $upload_tmp_path;
		# Upload模块自动生成的一些信息，如文件大小与文件md5值
		upload_aggregate_form_field "${upload_field_name}_md5" $upload_file_md5;
		upload_aggregate_form_field "${upload_field_name}_size" $upload_file_size;
		# 允许的字段，允许全部可以 "^.*$"
		upload_pass_form_field "^.*$";
		# upload_pass_form_field "^submit$|^description$";
		# 每秒字节速度控制，0表示不受控制，默认0, 128K
		upload_limit_rate 0;
		# 如果pass页面是以下状态码，就删除此次上传的临时文件
		upload_cleanup 400 404 499 500-505;
		# 打开开关，意思就是把前端脚本请求的参数会传给后端的脚本语言，比如：http://localhost:50001/upload_finish.jsp?type=ad,后台来访问。
		upload_pass_args on;  
		track_uploads proxied 30s;
        }

	location ^~ /progress {
            upload_progress_jsonp_output;
            report_uploads proxied;
        }

	location /upload_finish.jsp {        
		add_header "Access-Control-Allow-Origin" "*";
		# 如果不需要后端程序处理，直接返回200即可，如果返回 400 404 499 500-505则文件会被自动删除
		#return 200;    
		proxy_pass http://192.168.0.30:50001;
	}  	

	location /oss {
            root   /alidata;
            index  index.html index.htm;
        }     
    }
}
